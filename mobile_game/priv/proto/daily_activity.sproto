##日常活动 1.保卫人鱼公主 2.桑尼号 3.时空裂痕

@include "game.sproto"

# 上线推送保卫人鱼公主-桑尼号-时空裂隙玩家基本信息
proto PUSH_DAILY_ACTIVITY_INFO=11
{
    client{
    }
    server{
        message{
                type:u8,                 #1.保卫人鱼公主 2.桑尼号 3.时空裂痕 4.打木桶 5.摘星
                buy_count:u8,
           		fight_count:u8,          #已经挑战次数
       		    fight_totle_count:u8,    #挑战总次数
            	pay_count:u8,            #已经购买次数
            	pay_totle_count:u8       #购买总次数
            	#max_wave:u8,            #拉取保卫人鱼公主信息时加上最大波数
            	#max_point:u32           #拉取桑尼号信息时加上最大积分
         }
     }
}

# 客户端发送选择的场景列表
proto MSG_SELECT_IDS=12
{
    client{
        message{
                scene_id_1:u32,
                scene_id_2:u32,
                scene_id_3:u32,
                scene_id_4:u32
        }
    }
    server{
        message=empty
    }
}

# 进入场景
proto MSG_ENTER_SCENE=13
{
    client{
        message{
            type:u8
        }
    }
    server{
        message=empty
        ##进入时空裂缝，会把scene_id发回给客户端
        ##scene_id_1:u32,
        ##scene_id_2:u32,
        ##scene_id_3:u32,
        ##scene_id_4:u32
    }
}

#奖励
proto PUSH_PRIZE=14
{
    client{
    }
    server{
        message{
            prizeInfo1:list<{itemId:item_bid, itemCount:u32}>
        }
    }
}

#时空裂隙结算奖励
proto PUSH_BOSS_PRIZE=15
{
    client{
    }
    server{
        message{
            scene_id_1:u32,
            scene_id_2:u32,
            scene_id_3:u32,
            scene_id_4:u32,
            prizeInfo2:list<{itemId:item_bid, itemCount:u32}>
        }
    }
}

#活动1 美人鱼公主波数
proto PUSH_WAVE_PRIZE=16
{
    client{
    }
    server{
        message{
            is_success:u8,   #是否成功
            wave:u8          #美人鱼公主波数
        }
    }
}

#活动2 桑尼号积分
proto PUSH_POINT_PRIZE=17
{
    client{
    }
    server{
        message{
            point:u32  #桑尼号积分
        }
    }
}

# 扫荡
proto MSG_DAILY_ACTIVITY_SWEEP=18
{
    client{
        message{
            type:u8
        }
    }
    server{
        message{
            prizeInfo:list<{itemId:u32, itemCount:u32}>
        }
    }
}

## 日常活动购买挑战次数
proto MSG_DAILY_ACTIVITY_BY_CHALLENGE_TIMES=19
{
    client{
        message{
            type:u8,        ##活动类型
            count:u8        ##购买次数
        }
    }
    server{
        message{
            ReplyNum:reply_num              #0成功 , 1失败
        }
    }
}

# 请求周常活动信息
proto MSG_DAILY_ACTIVITY_GET_NEW_ACTIVITY_INFO=20
{
    client{
        message{
            type:u8
        }
    }
    server{
        message{
            times:u8,
            time:u64
        }
    }
}

# 周常活动4结算
proto MSG_DAILY_ACTIVITY_4_PUSH_POINT_PRIZE=21
{
    client{
    }
    server{
        message{
            point:u32
        }
    }
}

# 周常活动5结算
proto MSG_DAILY_ACTIVITY_5_PUSH_POINT_PRIZE=22
{
    client{
    }
    server{
        message{
            point:u32
        }
    }
}

# 钓鱼活动
## 钓鱼
proto MSG_DAILY_ACTIVITY_6_FISHING=23
{
    client{
        message{
            Type:u8             ## 1,2,3刻度， 4,撒网
        }
    }
    server{
        message{
            prizeInfo:list<{itemId:item_bid, itemCount:u32}>
        }
    }
}

## 购买钓鱼次数
proto MSG_DAILY_ACTIVITY_6_BUY_FISHING_COUNT=24
{
    client{
        message{
            count:u8    #购买次数
        }
    }
    server{
        message{
            Reply:u8    #0成功, 1失败
        }
    }
}

## 推送玩家钓鱼信息
proto PUSH_MSG_FISHING_INFO=25
{
    client{}
    server{
        message{
            fish_bait:u8,       ## 鱼饵使用次数
            buy_fish_bait:u8,   ## 购买鱼饵的次数
            fish_net:u8        ## 渔网捕鱼次数
        }
    }
}

## 通知钓鱼活动结束退场景
proto PUSH_MSG_FISHING_OVER=26
{
    client{}
    server{
        message=empty
    }
}
