%% Auto generated by defs from game.def
%% Don't edit it.

-define(alreay_exist, alreay_exist).
-define(relive, relive). %%% 复活
-define(scene_team, scene_team).
-define(offline, offline).
-define(scene_arena, scene_arena).
-define(offline_ok, offline_ok).
-define(scene_main_ins, scene_main_ins).
-define(scene_pseduo, scene_pseduo).
-define(scene_normal, scene_normal).


-type frame_name() :: frame_flush_data  | frame_update_rank  | frame_zero_clock  | frame_levelup  | frame_vip_levelup .
%% Enum Atom frame_name begin
-define(frame_flush_data, frame_flush_data).
-define(frame_update_rank, frame_update_rank).
-define(frame_zero_clock, frame_zero_clock).
-define(frame_levelup, frame_levelup).
-define(frame_vip_levelup, frame_vip_levelup).
%% Enum Atom frame_name end 

-type wait_timeout() :: 1000000 .
%% Enum wait_timeout begin
-define(ONLINE_TIMEOUT, 1000000).
%% Enum wait_timeout end 

-type skill_attr() :: 1  | 2  | 3  | 4 .
%% Enum skill_attr begin
-define(S_STRENGTH, 1).
-define(S_INTELLECT, 2).
-define(S_NIMBLE, 3).
-define(S_STRONG, 4).
%% Enum skill_attr end 

-type ex_state() :: 0  | 1  | 2 .
%% Enum ex_state begin
-define(EX_STATE_NONE, 0).
-define(EX_STATE_WUDI, 1).
-define(EX_STATE_BATI, 2).
%% Enum ex_state end 

-type mail() :: 10  | 20  | 30  | 31  | 40  | 41  | 42  | 43  | 44  | 45  | 46  | 47  | 50  | 51  | 52  | 53  | 54  | 55  | 56  | 57  | 58  | 59  | 60  | 61  | 62  | 63  | 64  | 65  | 66  | 67  | 68  | 69  | 70  | 71  | 72  | 73  | 74  | 75  | 76  | 77  | 78  | 79  | 80  | 81  | 82  | 83  | 84  | 85  | 86  | 87  | 88  | 89  | 90  | 91  | 92  | 93  | 94  | 95  | 96  | 97  | 98  | 99  | 100  | 101  | 102  | 103  | 104  | 105  | 106  | 107  | 108  | 109 .
%% Enum mail begin
-define(S_MAIL_TASK, 10).
-define(S_MAIL_INSTANCE, 20).
-define(S_MAIL_ARENA_TRUN, 30).
-define(S_MAIL_ARENA_DAY, 31).
-define(S_MAIL_AUCTION_BIDER_WIN, 40).
-define(S_MAIL_AUCTION_BIDER_LOSS, 41).
-define(S_MAIL_AUCTION_OWNER_WIN, 42).
-define(S_MAIL_AUCTION_OWNER_LOSS, 43).
-define(S_MAIL_FRIEND_GIFT, 44).
-define(S_MAIL_CARD_AWARD, 45).
-define(S_MAIL_ARENA_RESULT, 46).
-define(S_MAIL_RAND_INSTANCE, 47).
-define(S_MAIL_CAMP_PRIZE_WIN, 50).
-define(S_MAIL_CAMP_PRIZE_TIE, 51).
-define(S_MAIL_CAMP_PRIZE_LOSE, 52).
-define(S_MAIL_ABYSS_PRIZE, 53).
-define(S_MAIL_DIALY_PRIZE, 54).
-define(S_MAIL_SKY_INS_RANK_KILL_MONSTER, 55).
-define(S_MAIL_SKY_INS_RANK_KILL_PEOPLE, 56).
-define(S_MAIL_SKY_INS_CLIENT, 57).
-define(S_MAIL_SKY_INS_ONLINE, 58).
-define(S_MAIL_COURSE_INS_PRIZE, 59).
-define(S_MAIL_MAIN_CHAPTER_PRIZE, 60).
-define(S_MAIL_DAILY_ATTENDANCE, 61).
-define(S_MAIL_LEVEL, 62).
-define(S_MAIL_TURNTABLE, 63).
-define(S_MAIL_DAILY_BAOXIANG_PRIZE, 64).
-define(S_MAIL_FIRST_NINE_STAR_PASS_PRIZE, 65).
-define(S_MAIL_JIEDUAN_CHENGJIU_PRIZE, 66).
-define(S_MAIL_LEVEL_PRIZE, 67).
-define(S_MAIL_SUIT_PRIZE, 68).
-define(S_MAIL_PET_ADD_DAN, 69).
-define(S_MAIL_GUILD_BOSS_CHALLENGE, 70).
-define(S_MAIL_GUILD_BOSS_KILL, 71).
-define(S_MAIL_GUILD_BOSS_FIRST_KILL, 72).
-define(S_MAIL_RIDE_SOUL_PRIZE, 73).
-define(S_MAIL_ABYSS_LEAVE_PRIZE, 74).
-define(S_MAIL_ABYSS_WEEK_PRIZE, 75).
-define(S_MAIL_GWGC_PRIZE, 76).
-define(S_MAIL_FIRST_PAY_PRIZE, 77).
-define(S_MAIL_MAIN_OPEN_CARD_PRIZE, 78).
-define(S_MAIL_BOUNTY_PRIZE, 79).
-define(S_MAIL_NINE_LOTTERY_PRIZE, 80).
-define(S_MAIL_POWER_RANKING_PRIZE, 81).
-define(S_MAIL_PET_RANKING_PRIZE, 82).
-define(S_MAIL_RIDE_RANKING_PRIZE, 83).
-define(S_MAIL_SUIT_RANKING_PRIZE, 84).
-define(S_MAIL_ABYSS_RANKING_PRIZE, 85).
-define(S_MAIL_GUILD_RANKING_MASTER_PRIZE, 86).
-define(S_MAIL_GUILD_RANKING_MEMBER_PRIZE, 87).
-define(S_MAIL_GUILD_RANKING_GUILD_PRIZE, 88).
-define(S_MAIL_DO_SURVEY_PRIZE, 89).
-define(S_MAIL_VIP_DAY_COST_1, 90).
-define(S_MAIL_VIP_DAY_COST_2, 91).
-define(S_MAIL_VIP_DAY_COST_3, 92).
-define(S_MAIL_GUILD_RANKING_GUILD_PRIZE_1, 93).
-define(S_MAIL_GUILD_RANKING_GUILD_PRIZE_2, 94).
-define(S_MAIL_GUILD_RANKING_GUILD_PRIZE_3, 95).
-define(S_MAIL_GUILD_RANKING_GUILD_PRIZE_4, 96).
-define(S_MAIL_GUILD_RANKING_GUILD_PRIZE_5, 97).
-define(S_MAIL_GUILD_RANKING_GUILD_PRIZE_6, 98).
-define(S_MAIL_SERVER_HAPPY_PRIZE, 99).
-define(S_MAIL_SERVER_LOGIN_PRIZE, 100).
-define(S_MAIL_BOUNTY_COMPLETE_PRIZE, 101).
-define(S_MAIL_CD_KEY, 102).
-define(S_MAIL_DAILY_ACTIVITY_4_RANK_PRIZE, 103).
-define(S_MAIL_DAILY_ACTIVITY_5_RANK_PRIZE, 104).
-define(S_MAIL_ATTENTION_WECHAT, 105).
-define(S_MAIL_SHARE_GAME, 106).
-define(S_MAIL_FISHING, 107).
-define(S_MAIL_GUILD_MINING_PRIZE, 108).
-define(S_MAIL_GUILD_SAINT, 109).
%% Enum mail end 

-type sat() :: 11  | 12  | 13  | 14  | 15  | 16  | 17  | 18  | 19  | 20  | 21  | 22  | 23  | 24  | 25  | 26  | 27  | 28  | 29  | 30  | 31  | 32  | 33  | 34  | 35  | 36  | 37 .
%% Enum sat begin
-define(SAT_HP, 11).
-define(SAT_MP, 12).
-define(SAT_SP, 13).
-define(SAT_NP, 14).
-define(SAT_STRENGTH, 15).
-define(SAT_INTELLECT, 16).
-define(SAT_NIMBLE, 17).
-define(SAT_STRONG, 18).
-define(SAT_ATK, 19).
-define(SAT_DEF, 20).
-define(SAT_CRIT, 21).
-define(SAT_BLOCK, 22).
-define(SAT_PLIABLE, 23).
-define(SAT_PURE_ATK, 24).
-define(SAT_BREAK_DEF, 25).
-define(SAT_ATK_DEEP, 26).
-define(SAT_ATK_FREE, 27).
-define(SAT_ATK_SPEED, 28).
-define(SAT_PRECISE, 29).
-define(SAT_THUNDER_ATK, 30).
-define(SAT_THUNDER_DEF, 31).
-define(SAT_FIRE_ATK, 32).
-define(SAT_FIRE_DEF, 33).
-define(SAT_ICE_ATK, 34).
-define(SAT_ICE_DEF, 35).
-define(SAT_MOVE_SPEED, 36).
-define(SAT_RUN_SPEED, 37).
%% Enum sat end 

-type scene_type_id() :: 1  | 2  | 3  | 4  | 5 .
%% Enum scene_type_id begin
-define(SC_TYPE_NORMAL, 1).
-define(SC_TYPE_PSEDUO, 2).
-define(SC_TYPE_MAIN_INS, 3).
-define(SC_TYPE_ARENA, 4).
-define(SC_TYPE_TEAM, 5).
%% Enum scene_type_id end 

-type relive_type() :: 1  | 2 .
%% Enum relive_type begin
-define(ORIGINAL_PLACE_RELIVE, 1).
-define(RELIVE_PLACE_RELIVE, 2).
%% Enum relive_type end 

-type fight_state() :: 2  | 1  | 0  | 3 .
%% Enum fight_state begin
-define(ins_fighting, 2).
-define(ins_complete, 1).
-define(ins_leave, 0).
-define(ins_fail, 3).
%% Enum fight_state end 

-type ins_state() :: 0  | 1 .
%% Enum ins_state begin
-define(ins_state_client, 0).
-define(ins_state_online, 1).
%% Enum ins_state end 

-type open_fun() :: 1  | 2  | 3  | 4  | 5  | 6  | 7  | 8  | 9  | 10  | 11  | 12  | 14  | 15  | 16  | 17  | 18  | 19  | 20  | 21  | 22  | 23  | 24  | 27  | 30  | 31  | 32 .
%% Enum open_fun begin
-define(OPEN_BAG, 1).
-define(OPEN_DEPOT, 2).
-define(OPEN_SHOP, 3).
-define(OPEN_MAIL, 4).
-define(OPEN_LOGIN_REWARD, 5).
-define(OPEN_CHARGE, 6).
-define(OPEN_RANK, 7).
-define(OPEN_ACC, 8).
-define(OPEN_FRIEND, 9).
-define(OPEN_CROWN, 10).
-define(OPEN_CARD, 11).
-define(OPEN_GUILD, 12).
-define(OPEN_PET, 14).
-define(OPEN_VIP, 15).
-define(OPEN_AUCTION, 16).
-define(OPEN_ARENA, 17).
-define(OPEN_SKILL, 18).
-define(OPEN_DAILY_ACTIVITY, 19).
-define(OPEN_WORD_BOSS, 20).
-define(OPEN_PK, 21).
-define(OPEN_ABYSS, 22).
-define(OPEN_CAMP, 23).
-define(OPEN_SELLER, 24).
-define(OPEN_RIDE, 27).
-define(OPEN_HAPPY_SERVER, 30).
-define(OPEN_BOUNTY, 31).
-define(OPEN_HOURLY_SP, 32).
%% Enum open_fun end 

-type ins_type() :: 1  | 2  | 3  | 4  | 6  | 7  | 8  | 9  | 10  | 11  | 12  | 13  | 14  | 15  | 16  | 17 .
%% Enum ins_type begin
-define(T_INS_MAIN, 1).
-define(T_INS_FREE, 2).
-define(T_INS_SHENMO, 3).
-define(T_INS_XUKONG, 4).
-define(T_INS_SKY_RAND, 6).
-define(T_INS_SKY_MIGONG, 7).
-define(T_INS_DAILY_1, 8).
-define(T_INS_DAILY_2, 9).
-define(T_INS_DAILY_3, 10).
-define(T_INS_PORTAL, 11).
-define(T_INS_COURSE, 12).
-define(T_INS_GUILD_BOSS, 13).
-define(T_INS_GWGC, 14).
-define(T_INS_DAILY_4, 15).
-define(T_INS_DAILY_5, 16).
-define(T_INS_DAILY_6, 17).
%% Enum ins_type end 

-type pk_mode() :: 1  | 2  | 3  | 4  | 5  | 6 .
%% Enum pk_mode begin
-define(PK_PEACE, 1).
-define(PK_ALL, 2).
-define(PK_TEAM, 3).
-define(PK_FAMILY, 4).
-define(PK_NATIONr, 5).
-define(PK_GOOD_BAD, 6).
%% Enum pk_mode end 

