%% Auto generated by defs from scene_agent.def
%% Don't edit it.



-type agent_pl_state() :: pl_attack  | pl_ba_ti  | pl_be_attacked  | pl_beat_back  | pl_beat_fly  | pl_beat_up  | pl_dead  | pl_jumping  | pl_moving  | pl_path_teleport  | pl_rush  | pl_stiff  | pl_beat_down  | pl_beat_horizontal  | pl_beat_vertical  | pl_bullet_attack_area  | pl_wait_for_moving  | pl_dizzy .
%% Enum Atom agent_pl_state begin
-define(pl_attack, pl_attack).
-define(pl_ba_ti, pl_ba_ti).
-define(pl_be_attacked, pl_be_attacked).
-define(pl_beat_back, pl_beat_back).
-define(pl_beat_fly, pl_beat_fly).
-define(pl_beat_up, pl_beat_up).
-define(pl_dead, pl_dead).
-define(pl_jumping, pl_jumping).
-define(pl_moving, pl_moving).
-define(pl_path_teleport, pl_path_teleport).
-define(pl_rush, pl_rush).
-define(pl_stiff, pl_stiff).
-define(pl_beat_down, pl_beat_down).
-define(pl_beat_horizontal, pl_beat_horizontal).
-define(pl_beat_vertical, pl_beat_vertical).
-define(pl_bullet_attack_area, pl_bullet_attack_area).
-define(pl_wait_for_moving, pl_wait_for_moving).
-define(pl_dizzy, pl_dizzy).
%% Enum Atom agent_pl_state end 

-type move_reason() :: mst_move  | mst_skill_move  | mst_skill_rush  | mst_beat_back .
%% Enum Atom move_reason begin
-define(mst_move, mst_move). %%% 主动移动 
-define(mst_skill_move, mst_skill_move). %%% 技能移动 
-define(mst_skill_rush, mst_skill_rush). %%% 技能rush 
-define(mst_beat_back, mst_beat_back). %%% 击退移动 
%% Enum Atom move_reason end 

-type agent_state_new() :: st_new_move .
%% Enum Atom agent_state_new begin
-define(st_new_move, st_new_move).
%% Enum Atom agent_state_new end 

-type agent_state() :: st_none  | st_die  | st_stand  | st_stroll  | st_stroll_wait  | st_chase  | st_back  | st_fight  | st_reaction  | st_convoy  | st_convoy_wait_player  | st_skill_obj .
%% Enum Atom agent_state begin
-define(st_none, st_none).
-define(st_die, st_die).
-define(st_stand, st_stand). %%% 站立不主动攻击 
-define(st_stroll, st_stroll). %%% 闲逛 
-define(st_stroll_wait, st_stroll_wait). %%%  闲逛休息 
-define(st_chase, st_chase). %%% 追击 
-define(st_back, st_back). %%% 回到出生点 
-define(st_fight, st_fight). %%% 战斗中 
-define(st_reaction, st_reaction).
-define(st_convoy, st_convoy).
-define(st_convoy_wait_player, st_convoy_wait_player).
-define(st_skill_obj, st_skill_obj).
%% Enum Atom agent_state end 

-type agent_type() :: agent_player  | agent_monster  | agent_skill_obj  | agent_pet  | agent_ob .
%% Enum Atom agent_type begin
-define(agent_player, agent_player). %%%  
-define(agent_monster, agent_monster).
-define(agent_skill_obj, agent_skill_obj). %%% 释放物 
-define(agent_pet, agent_pet).
-define(agent_ob, agent_ob). %%% 观战 
%% Enum Atom agent_type end 

-type agent_ss_state() :: ss_ba_ti  | ss_stiff  | ss_beat_back_stiff  | ss_down_ground_stiff .
%% Enum Atom agent_ss_state begin
-define(ss_ba_ti, ss_ba_ti). %%%霸体 
-define(ss_stiff, ss_stiff). %%% 既不能移动也不能释放技能,也不会被攻击到 
-define(ss_beat_back_stiff, ss_beat_back_stiff). %%% 击退击飞击退中 
-define(ss_down_ground_stiff, ss_down_ground_stiff). %%% 倒地 
%% Enum Atom agent_ss_state end 

